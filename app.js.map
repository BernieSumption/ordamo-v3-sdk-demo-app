{"version":3,"sources":["node_modules/ordamo-v3-sdk/lib/index.js","app/content-schema.ts","app/default-content.ts","app/index.ts","app/metadata.ts","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":[],"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,SAAS,EAAE;YACT;gBACE,OAAO,EAAE,yBAAyB;gBAClC,gBAAgB,EAAE,UAAU;aAC7B;YACD;gBACE,OAAO,EAAE,uBAAuB;gBAChC,QAAQ,EAAE;oBACR;wBACE,OAAO,EAAE,yBAAyB;wBAClC,gBAAgB,EAAE,UAAU;qBAC7B;oBACD;wBACE,OAAO,EAAE,yBAAyB;wBAClC,gBAAgB,EAAE,UAAU;qBAC7B;iBACF;aACF;YACD;gBACE,OAAO,EAAE,sBAAsB;gBAC/B,SAAS,EAAE,IAAI;aAChB;SACF;KACF,CAAC;AACJ,CAAC;AAjCD;6BAiCC;;;;;;;;AC9CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"__tmp_build/app.js","sourcesContent":["\nrequire.register(\"ordamo-v3-sdk/lib/index.js\", function(exports, require, module) {\n  require = __makeRelativeRequire(require, {}, \"ordamo-v3-sdk\");\n  (function() {\n    \"use strict\";\nvar RUNNING_MODE;\nif (typeof window === \"undefined\") {\n    RUNNING_MODE = 3 /* UNIT_TESTS */;\n}\nelse if (window === top) {\n    RUNNING_MODE = 2 /* DEVELOPMENT */;\n}\nelse {\n    RUNNING_MODE = 1 /* HOSTED */;\n}\nvar INSTANCE_CREATED = false;\nvar MAX_SAVED_STATE_SECONDS = 10 * 60;\n/**\n * Return the SDK running mode, useful for distinguishing between test and live\n */\nfunction getRunningMode() {\n    return RUNNING_MODE;\n}\nexports.getRunningMode = getRunningMode;\n/**\n * The main class of the SDK. Your app is responsible for creating a single instance.\n */\nvar OrdamoSDK = (function () {\n    /**\n     * When the OrdamoSDK instance is created it will communicate with the host application to\n     * request the app's layout and content (or in development mode, use a mock layout and\n     * load content from default-content.json).\n     *\n     * @param _contentSchema\n     *\n     * @param _initAppCallback\n     */\n    function OrdamoSDK(options) {\n        this._sentReadyEvent = false;\n        this._savedState = null;\n        if (INSTANCE_CREATED && RUNNING_MODE !== 3 /* UNIT_TESTS */) {\n            throw new Error(\"Only one instance of OrdamoSDK may be created per application \" + RUNNING_MODE);\n        }\n        INSTANCE_CREATED = true;\n        this.onInteractions = options.onInteractions;\n        this.onNavigate = options.onNavigate;\n        this._contentSchema = options.contentSchema;\n        this._initCallback = options.initCallback;\n        this._saveStateCallback = options.saveStateCallback;\n        this._fullscreen = options.fullscreen;\n        this._initialise();\n    }\n    OrdamoSDK.prototype._initialise = function () {\n        var _this = this;\n        if (RUNNING_MODE === 3 /* UNIT_TESTS */)\n            return;\n        if (document.readyState !== \"complete\") {\n            document.addEventListener(\"readystatechange\", function () {\n                if (document.readyState === \"complete\") {\n                    _this._initialise();\n                }\n            });\n            return;\n        }\n        if (RUNNING_MODE === 2 /* DEVELOPMENT */) {\n            this._initialiseDevelopmentMode();\n        }\n        else if (RUNNING_MODE === 1 /* HOSTED */) {\n            this._initialiseHostedMode();\n        }\n        this._startTouchEmulation();\n    };\n    OrdamoSDK.prototype._getSavedStateKey = function () {\n        return \"ordamo-sdk-content-\" + document.location.pathname;\n    };\n    /**\n     * This must be called once only after the app has rendered itself\n     * and it is safe to display. The app will be hidden until this is called, preventing the user\n     * from seeing e.g. half-loaded content.\n     */\n    OrdamoSDK.prototype.notifyAppIsReady = function () {\n        if (!this._initMessage) {\n            throw new Error(\"Illegal call to notifyAppIsReady() before init callback has fired.\");\n        }\n        if (!this._sentReadyEvent) {\n            this._sentReadyEvent = true;\n            if (RUNNING_MODE === 1 /* HOSTED */) {\n                this._sendParentMessage({ eventType: \"ready\" });\n            }\n        }\n    };\n    /**\n     * Return the content that the app should render. If specific content has been created using\n     * the CMS, that content will be provided through this method, otherwise the default content\n     * from default-content.json will be returned.\n     */\n    OrdamoSDK.prototype.getContent = function () {\n        this._requireInitMessage();\n        return this._content;\n    };\n    /**\n     * Get the table's current layout. Each restaurant table may be a different physical size with\n     * a different number and position of plates.\n     */\n    OrdamoSDK.prototype.getLayout = function () {\n        this._requireInitMessage();\n        return this._initMessage.layout;\n    };\n    /**\n     * Return the table label provided by the apphost.\n     *\n     * See InitMessage.table for format information.\n     */\n    OrdamoSDK.prototype.getTableLabel = function () {\n        this._requireInitMessage();\n        return this._initMessage.table;\n    };\n    /**\n     * Return the requiredWidth value from the app's metadata, or undefined if no requiredWidth is set\n     */\n    OrdamoSDK.prototype.getRequiredWidth = function () {\n        this._requireInitMessage();\n        return this._initMessage.requiredWidth;\n    };\n    /**\n     * Return the requiredHeight value from the app's metadata, or undefined if no requiredHeight is set\n     */\n    OrdamoSDK.prototype.getRequiredHeight = function () {\n        this._requireInitMessage();\n        return this._initMessage.requiredHeight;\n    };\n    /**\n     * Return the saved state as created by the saveStateCallback constructor option last\n     * time the application quit.\n     *\n     * WARNING: restoring saved state is a common source of application errors, especially\n     * just after an application update when the saved state was created by the previous\n     * version of the application. Validate that the state meets your expectations and wrap\n     * your restoration code in a try/catch block.\n     */\n    OrdamoSDK.prototype.getSavedState = function () {\n        this._requireInitMessage();\n        return this._savedState;\n    };\n    /**\n     * Request that the host application closes this app and returns to the default app.\n     */\n    OrdamoSDK.prototype.requestAppClose = function () {\n        if (RUNNING_MODE === 1 /* HOSTED */) {\n            this._sendParentMessage({ eventType: \"close\" });\n        }\n        else if (RUNNING_MODE === 2 /* DEVELOPMENT */) {\n            document.body.style.transition = \"opacity 1s, background 1s, visibility 0s linear 1s\";\n            document.body.style.opacity = \"0\";\n            document.documentElement.style.background = \"#FFF\"; // <html> needs a background, or <body>'s one will display even if its hidden\n            document.body.style.visibility = \"hidden\";\n            logNotice(\"The app has been closed. In a hosted application, the user would now be seeing the main menu.\");\n        }\n        if (this._saveStateCallback) {\n            this._saveState();\n        }\n    };\n    /**\n     * Set a \"font-size: XXXpx\" style property on the root element of the document (i.e. <html>)\n     * so that the width of the plate spots are a known number of CSS rem units.\n     *\n     * For example, if your app graphic design has the plate spots at 500px wide, call\n     * `setRemUnitDiameterOfPlateSpot(500) and then use \"rem\" units instead of \"px\",\n     * e.g. \"width: 250rem\" to make an element half the width of the plate spot.\n     *\n     * This allows you to create a plate spot UI that scales perfectly to the actual\n     * plate spot size, and is more reliable than using a CSS transform for scaling.\n     */\n    OrdamoSDK.prototype.setRemUnitDiameterOfPlateSpot = function (plateSpotRemWidth) {\n        this._requireInitMessage();\n        var plateSpot = this._initMessage.layout.plateSpots[0];\n        if (plateSpot) {\n            document.documentElement.style.fontSize = (plateSpot.radius * 2 / plateSpotRemWidth) + \"px\";\n        }\n    };\n    //\n    // PRIVATE STUFF\n    //\n    OrdamoSDK.prototype._handleParentMessage = function (event) {\n        var message = event.data;\n        if (message.eventType === \"init\") {\n            if (this._initMessage) {\n                console.error(\"Second init message sent, ignoring\");\n            }\n            else {\n                this._receiveInitMessage(message);\n            }\n        }\n        if (message.eventType === \"interactions\" && this.onInteractions) {\n            this.onInteractions(message);\n        }\n        if (message.eventType === \"navigate\" && this.onNavigate) {\n            this.onNavigate(message);\n        }\n    };\n    OrdamoSDK.prototype._initialiseHostedMode = function () {\n        window.addEventListener(\"message\", this._handleParentMessage.bind(this));\n        var loadMessage = {\n            eventType: \"load\",\n            fullscreen: !!this._fullscreen\n        };\n        this._sendParentMessage(loadMessage);\n    };\n    OrdamoSDK.prototype._sendParentMessage = function (message) {\n        parent.postMessage(message, \"*\");\n    };\n    OrdamoSDK.prototype._initialiseDevelopmentMode = function () {\n        logNotice(\"running in development mode.\");\n        var isGoogle = navigator.vendor && navigator.vendor.indexOf(\"Google\") === 0;\n        var chromeVersion = /\\bChrome\\/(\\d+)/.exec(navigator.userAgent);\n        if (!(isGoogle && chromeVersion && parseInt(chromeVersion[1]) >= 46)) {\n            alert(\"Sorry, Ordamo V3 apps require a recent version of Google Chrome to run. Please load this app in Chrome, and/or ensure that your copy of Chrome is up to date.\");\n            throw new Error(\"Bad browser: \" + navigator.vendor + \" \" + navigator.userAgent);\n        }\n        if (location.href.indexOf(\"file:\") === 0) {\n            alert(\"Ordamo V3 apps must be run from a web server to function correctly - the address must start \\\"http:\\\" or \\\"https:\\\", not \\\"file:\\\".\");\n            throw new Error(\"Bad browser: \" + navigator.vendor + \" \" + navigator.userAgent);\n        }\n        var mockLayout = makeMockLayout();\n        this._receiveInitMessage({\n            eventType: \"init\",\n            content: null,\n            layout: mockLayout,\n            table: \"1\",\n            version: \"0.\" + Math.round(Math.random() * 99999) + \"-MOCKVERSION-SDK-DEVMODE\",\n            sessionId: 1,\n            requiredWidth: 800,\n            requiredHeight: 600,\n        });\n        if (document.location.search.match(/\\bmanualFullscreen=true/)) {\n            var goFullscreen = function () {\n                if (document.webkitFullscreenEnabled && !document.webkitFullscreenElement) {\n                    document.body.webkitRequestFullScreen();\n                }\n            };\n            document.body.addEventListener(\"click\", goFullscreen);\n            document.body.addEventListener(\"touchstart\", goFullscreen);\n        }\n    };\n    OrdamoSDK.prototype._requireInitMessage = function () {\n        if (!this._initMessage) {\n            throw new Error(\"The SDK has not initialised yet.\");\n        }\n    };\n    OrdamoSDK.prototype._receiveInitMessage = function (message) {\n        if (this._initMessage) {\n            logError(\"Duplicate init message received, ignoring\");\n            return;\n        }\n        this._initMessage = message;\n        this._restoreState();\n        if (message.content || !this._contentSchema) {\n            this._finishInitialisation();\n        }\n        else {\n            this._loadDefaultContentFile();\n        }\n    };\n    OrdamoSDK.prototype._finishInitialisation = function () {\n        var _this = this;\n        if (this._contentSchema) {\n            this._content = JSON.parse(JSON.stringify(this._contentSchema));\n            for (var prop in this._content) {\n                this._content[prop].value = this._initMessage.content[prop];\n            }\n        }\n        if (this._initCallback) {\n            this._initCallback();\n        }\n        var TIMEOUT_SECONDS = 5;\n        setTimeout(function () {\n            if (!_this._sentReadyEvent) {\n                console.error(\"WARNING: this app is taking too long to be ready. It should render in less than \" + TIMEOUT_SECONDS + \" seconds then call notifyAppIsReady().\");\n            }\n        }, TIMEOUT_SECONDS * 1000);\n    };\n    OrdamoSDK.prototype._loadDefaultContentFile = function () {\n        var _this = this;\n        var DEFAULT_CONTENT_FILE = \"default-content.json?version=\" + encodeURIComponent(this._initMessage.version);\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", DEFAULT_CONTENT_FILE, true);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    var content = void 0;\n                    try {\n                        content = JSON.parse(xhr.responseText);\n                    }\n                    catch (e) {\n                        console.error(DEFAULT_CONTENT_FILE + \" is not a valid JSON file, check the console for more info\");\n                        console.error(e);\n                        logNotice(\"This content is not JSON\", xhr.responseText);\n                    }\n                    if (content) {\n                        _this._initMessage.content = content;\n                        _this._finishInitialisation();\n                    }\n                }\n                else {\n                    console.error(\"Failed to load \\\"\" + DEFAULT_CONTENT_FILE + \"\\\", is the development server running (npm start)\");\n                }\n            }\n        };\n        xhr.send();\n    };\n    OrdamoSDK.prototype._saveState = function () {\n        if (this._saveStateCallback) {\n            var storedForm = {\n                timestamp: Date.now(),\n                state: this._saveStateCallback(),\n                appVersion: this._initMessage.version,\n                sessionId: this._initMessage.sessionId\n            };\n            sessionStorage.setItem(this._getSavedStateKey(), JSON.stringify(storedForm));\n        }\n    };\n    OrdamoSDK.prototype._restoreState = function () {\n        var storedForm = sessionStorage.getItem(this._getSavedStateKey());\n        if (storedForm) {\n            try {\n                var save = JSON.parse(storedForm);\n                if (save.appVersion !== this._initMessage.version) {\n                    logNotice(\"Ignoring saved state, app version has changed from \\\"\" + save.appVersion + \"\\\" to \\\"\" + this._initMessage.version + \"\\\".\");\n                    this._clearState();\n                }\n                else if (save.sessionId !== this._initMessage.sessionId) {\n                    logNotice(\"Ignoring saved state, session has changed.\");\n                    this._clearState();\n                }\n                else if (Date.now() - save.timestamp > MAX_SAVED_STATE_SECONDS * 1000) {\n                    logNotice(\"Ignoring saved state older than \" + MAX_SAVED_STATE_SECONDS + \" seconds.\");\n                    this._clearState();\n                }\n                else {\n                    this._savedState = save.state;\n                }\n            }\n            catch (e) {\n                console.error(\"Error parsing save data, wiping saved state\", e, storedForm);\n                this._clearState();\n            }\n        }\n    };\n    OrdamoSDK.prototype._clearState = function () {\n        sessionStorage.removeItem(this._getSavedStateKey());\n    };\n    /**\n     * Supresses mouse events and convert them to touch events\n     */\n    OrdamoSDK.prototype._startTouchEmulation = function () {\n        var _this = this;\n        startTouchEventEmulation();\n        if (RUNNING_MODE === 2 /* DEVELOPMENT */ && !this._fullscreen) {\n            logNotice(\"Supressing touch events because this app is not fullscreen. Background apps can use OrdamoSDK.onInteractions instead.\");\n        }\n        var interceptTouchEvent = function (e) {\n            if (!_this._fullscreen) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            if (_this.onInteractions) {\n                _this.onInteractions(makeInteractionsMessage([e]));\n            }\n        };\n        document.body.addEventListener(\"touchstart\", interceptTouchEvent, true);\n        document.body.addEventListener(\"touchmove\", interceptTouchEvent, true);\n        document.body.addEventListener(\"touchend\", interceptTouchEvent, true);\n    };\n    return OrdamoSDK;\n}());\nexports.OrdamoSDK = OrdamoSDK;\nfunction logError(message) {\n    if (RUNNING_MODE === 1 /* HOSTED */) {\n        console.error(message);\n    }\n    else {\n        throw new Error(message);\n    }\n}\n/**\n * Helper function for defining content managed images.\n */\nfunction image(options) {\n    return Object.assign({ type: \"image\" }, options);\n}\nexports.image = image;\n/**\n * Helper function for defining content managed text strings.\n */\nfunction text(options) {\n    return Object.assign({ type: \"text\" }, options);\n}\nexports.text = text;\n/**\n * Helper function for defining content managed numbers.\n */\nfunction number(options) {\n    return Object.assign({ type: \"number\" }, options);\n}\nexports.number = number;\n/**\n * Helper function for defining lists of content managed text strings.\n */\nfunction textList(options) {\n    options.items = Object.assign({ type: \"text\" }, options.items);\n    return Object.assign({ type: \"list\" }, options);\n}\nexports.textList = textList;\n/**\n * Helper function for defining lists of content managed images.\n */\nfunction imageList(options) {\n    options.items = Object.assign({ type: \"image\" }, options.items);\n    return Object.assign({ type: \"list\" }, options);\n}\nexports.imageList = imageList;\n/**\n * Helper function for defining lists of content managednumbersimages.\n */\nfunction numberList(options) {\n    options.items = Object.assign({ type: \"number\" }, options.items);\n    return Object.assign({ type: \"list\" }, options);\n}\nexports.numberList = numberList;\n//\n// METADATA\n//\nexports.AUTO_METADATA = \"ORDAMO_V3_SDK_AUTO_METADATA\";\nfunction makeInteractionsMessage(events, originElement) {\n    var coords;\n    if (originElement) {\n        coords = originElement.getBoundingClientRect();\n    }\n    return {\n        eventType: \"interactions\",\n        touchEvents: events.map(function (e) { return makeCrossWindowTouchEvent(e, coords); })\n    };\n}\nexports.makeInteractionsMessage = makeInteractionsMessage;\nfunction makeCrossWindowTouchEvent(touchEvent, originCoords) {\n    var touches = Array.prototype.slice.call(touchEvent.touches);\n    var changedTouches = Array.prototype.slice.call(touchEvent.changedTouches);\n    return {\n        type: touchEvent.type,\n        touches: touches.map(function (t) { return makeCrossWindowTouch(t, originCoords); }),\n        changedTouches: changedTouches.map(function (t) { return makeCrossWindowTouch(t, originCoords); }),\n        altKey: touchEvent.altKey,\n        ctrlKey: touchEvent.ctrlKey,\n        metaKey: touchEvent.metaKey,\n        shiftKey: touchEvent.shiftKey,\n    };\n}\nexports.makeCrossWindowTouchEvent = makeCrossWindowTouchEvent;\nfunction makeCrossWindowTouch(touch, originCoords) {\n    var clientX = touch.clientX;\n    var clientY = touch.clientY;\n    if (originCoords) {\n        clientX -= originCoords.left;\n        clientY -= originCoords.top;\n    }\n    return {\n        identifier: touch.identifier,\n        clientX: clientX,\n        clientY: clientY\n    };\n}\nexports.makeCrossWindowTouch = makeCrossWindowTouch;\n//\n// DEVELOPMENT UTILITIES\n//\nfunction logNotice(message) {\n    var additional = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        additional[_i - 1] = arguments[_i];\n    }\n    console.log.apply(console, [\"Ordamo SDK: \" + message].concat(additional));\n}\nfunction makeMockLayout() {\n    var queryParams = {};\n    document.location.href.replace(/[?&]([^=]+)=([^&]*)?/g, function (match, name, value) { return queryParams[name] = parseInt(value); });\n    if (queryParams[\"rotation\"] % 90) {\n        console.error(\"You have set rotation=\" + queryParams[\"rotation\"] + \" - the SDK only supports rotations that are a multiple of 90 degrees\");\n        queryParams[\"rotation\"] = Math.round(queryParams[\"rotation\"] / 90) * 90;\n    }\n    var numPlateSpots = isNaN(queryParams[\"plateSpots\"]) ? 2 : queryParams[\"plateSpots\"], numContentAreas = isNaN(queryParams[\"contentAreas\"]) ? 1 : queryParams[\"contentAreas\"], clearCentreSpace = queryParams[\"avoidCentre\"] ? 1 : 0, width = window.innerWidth, height = window.innerHeight, resolution = 12, padding = 20, columns = Math.min(3, numPlateSpots + numContentAreas + clearCentreSpace), rows = Math.ceil((numPlateSpots + numContentAreas + clearCentreSpace) / columns), radius = Math.min((width - padding * (columns + 1)) / columns, (height - padding * (rows + 1)) / rows) / 2, size = padding + radius * 2;\n    logNotice(\"Making mock layout \" + width + \"x\" + height + \"px (~ \" + Math.round(width / resolution) + \"x\" + Math.round(height / resolution) + \"cm) with \" + numPlateSpots + \" plate spots and \" + numContentAreas + \" content areas\" + (clearCentreSpace ? \" and keeping the centre clear\" : \"\") + \". Control the layout with URL parameters like so: ?plateSpots=4&contentAreas=2&rotation=0&avoidCentre=1\");\n    var item = 0, itemOffset = 0, x = 0, y = 0, rotation = queryParams[\"rotation\"];\n    return {\n        \"widthPx\": width,\n        \"heightPx\": height,\n        \"resolutionPixelsPerCm\": resolution,\n        \"plateSpots\": flowLayout(numPlateSpots, function () {\n            return {\n                \"type\": \"circle\",\n                \"id\": item,\n                \"x\": x,\n                \"y\": y,\n                \"radius\": radius,\n                \"rotationDegrees\": rotation,\n                \"borderWidth\": radius / 10\n            };\n        }),\n        \"contentAreas\": flowLayout(numContentAreas, function () {\n            return {\n                \"type\": \"rectangle\",\n                \"id\": item,\n                \"x\": x,\n                \"y\": y,\n                \"width\": radius * 2,\n                \"height\": radius * 2,\n                \"rotationDegrees\": rotation\n            };\n        })\n    };\n    function flowLayout(itemCount, itemFactory) {\n        var results = [];\n        for (var i = 0; i < itemCount; i++) {\n            computeXY();\n            if (clearCentreSpace) {\n                var dx = (window.innerWidth / 2 - x);\n                var dy = (window.innerHeight / 2 - y);\n                var centreDistance = Math.sqrt(dx * dx + dy * dy);\n                if (centreDistance < radius) {\n                    itemOffset++;\n                    computeXY();\n                }\n            }\n            if (isNaN(queryParams[\"rotation\"])) {\n                rotation = item * 90;\n            }\n            results.push(itemFactory());\n            item++;\n        }\n        return results;\n    }\n    function computeXY() {\n        x = padding + radius + size * ((item + itemOffset) % columns);\n        y = padding + radius + size * Math.floor((item + itemOffset) / columns);\n    }\n}\n/**\n * Supresses mouse events and convert them to touch events, optionally dispatching\n * the touch events on target DOM elements and/or reporting them through a callback.\n */\nfunction startTouchEventEmulation() {\n    var currentElement;\n    var hasNativeTouchEvents = false;\n    var killEventDead = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    var handleMouseEvent = function (touchType) {\n        return function (mouseEvent) {\n            if (mouseEvent.target.nodeName !== \"INPUT\") {\n                killEventDead(mouseEvent);\n                if (mouseEvent.button !== 0 || hasNativeTouchEvents) {\n                    return;\n                }\n                if (mouseEvent.type === \"mousedown\") {\n                    currentElement = mouseEvent.target;\n                    if (currentElement.nodeType !== Node.ELEMENT_NODE) {\n                        currentElement = currentElement.parentElement;\n                    }\n                }\n                if (!currentElement) {\n                    return;\n                }\n                var touch = new Touch({\n                    identifier: 1,\n                    target: currentElement,\n                    clientX: mouseEvent.clientX,\n                    clientY: mouseEvent.clientY,\n                    pageX: mouseEvent.pageX,\n                    pageY: mouseEvent.pageY,\n                    screenX: mouseEvent.screenX,\n                    screenY: mouseEvent.screenY,\n                });\n                var touchEvent = new TouchEvent(touchType, {\n                    touches: mouseEvent.type === \"mouseup\" ? [] : [touch],\n                    targetTouches: mouseEvent.type === \"mouseup\" ? [] : [touch],\n                    changedTouches: [touch],\n                    ctrlKey: mouseEvent.ctrlKey,\n                    shiftKey: mouseEvent.shiftKey,\n                    altKey: mouseEvent.altKey,\n                    metaKey: mouseEvent.metaKey,\n                    bubbles: true,\n                    cancelable: true\n                });\n                currentElement.dispatchEvent(touchEvent);\n            }\n            if (mouseEvent.type === \"mouseup\") {\n                currentElement = null;\n            }\n        };\n    };\n    var checkForNativeEvent = function (e) {\n        if (e.isTrusted) {\n            window.removeEventListener(\"touchstart\", checkForNativeEvent, true);\n            hasNativeTouchEvents = true;\n        }\n    };\n    window.addEventListener(\"touchstart\", checkForNativeEvent, true);\n    window.addEventListener(\"mousedown\", handleMouseEvent(\"touchstart\"), true);\n    window.addEventListener(\"mousemove\", handleMouseEvent(\"touchmove\"), true);\n    window.addEventListener(\"mouseup\", handleMouseEvent(\"touchend\"), true);\n    window.addEventListener(\"click\", killEventDead, true);\n    window.addEventListener(\"mouseenter\", killEventDead, true);\n    window.addEventListener(\"mouseleave\", killEventDead, true);\n    window.addEventListener(\"mouseout\", killEventDead, true);\n    window.addEventListener(\"mouseover\", killEventDead, true);\n}\nexports.startTouchEventEmulation = startTouchEventEmulation;\n  })();\n});","\nimport * as sdk from \"ordamo-v3-sdk\";\n\nconst SCHEMA = {\n  image: sdk.image({\n    title: \"Single image\",\n    minWidth: 50,\n    maxWidth: 250,\n    minHeight: 50,\n    maxHeight: 250\n  }),\n  imageList: sdk.imageList({\n    title: \"List of images\",\n    minCount: 0,\n    maxCount: 10,\n    items: {\n      minWidth: 50,\n      maxWidth: 250,\n      minHeight: 50,\n      maxHeight: 250\n    }\n  }),\n  video: sdk.image({\n    title: \"Single video\",\n    minWidth: 50,\n    maxWidth: 250,\n    minHeight: 50,\n    maxHeight: 250,\n    isVideo: true\n  }),\n  videoList: sdk.imageList({\n    title: \"List of videos\",\n    minCount: 0,\n    maxCount: 10,\n    items: {\n      minWidth: 50,\n      maxWidth: 250,\n      minHeight: 50,\n      maxHeight: 250,\n      isVideo: true\n    }\n  }),\n  number: sdk.number({\n    title: \"A number\",\n    integer: true\n  }),\n  numberList: sdk.numberList({\n    title: \"A list of numbers\",\n    minCount: 0,\n    maxCount: 100,\n    items: {\n      integer: false,\n      minValue: 10,\n      maxValue: 100\n    }\n  }),\n  text: sdk.text({\n    title: \"Bit of text\",\n    minLength: 0,\n    maxLength: 200,\n    multiline: false\n  }),\n  textList: sdk.textList({\n    title: \"List of text blocks\",\n    minCount: 0,\n    maxCount: 10,\n    items: {\n      minLength: 1,\n      maxLength: 2000,\n      multiline: true\n    }\n  }),\n};\n\nexport type DemoAppContent = typeof SCHEMA;\n\nexport default function getSchema(): DemoAppContent {\n  return SCHEMA;\n}\n","\n\n/**\n * This is a content generation module. It exports one function that returns an object.\n * This object is JSON encoded and saved to default-content.json when you\n * run `npm run build:content`. All this happens in a NodeJS process, so it's fine to use\n * Node-only functionality.\n */\n\n\nexport default function getContent() {\n  return {\n    image: \"default-content/husky.jpg\",\n    imageList: [\n      \"default-content/birthday.jpg\",\n      \"default-content/curiosity.jpg\"\n    ],\n    text: \"Here's a message!\",\n    textList: [\n      \"I'm a little teapot\\nshort and stout\",\n      \"here's my handle\\nhere's my spout\",\n      \"When I get all steamed up\\nI just shout\",\n      \"Tip me over and pour me out\"\n    ],\n    video: \"default-content/video.mp4\",\n    videoList: [\n      \"default-content/video.ogv\",\n      \"default-content/video.webm\"\n    ],\n    number: 3,\n    numberList: [\n      4,\n      5,\n      42,\n      65537,\n      Math.pow(2, 16),\n      2.685452\n    ]\n  };\n}\n","\n\nimport * as sdk from \"ordamo-v3-sdk\";\nimport getSchema from \"./content-schema\";\n\nlet sdkInstance = new sdk.OrdamoSDK({\n    initCallback: handleSDKInit,\n    contentSchema: getSchema(),\n    fullscreen: true\n});\n\nfunction handleSDKInit() {\n    let content = sdkInstance.getContent();\n\n    showFieldTitle(content.image.title, \"content-image-title\");\n    showSpecJSON(content.image, \"content-image-spec\");\n    showValue(image, content.image.value, \"content-image\", true);\n\n    showFieldTitle(content.imageList.title, \"content-image-list-title\");\n    showSpecJSON(content.imageList, \"content-image-list-spec\");\n    showListValue(image, content.imageList.value, \"content-image-list\", true);\n\n    showFieldTitle(content.text.title, \"content-text-title\");\n    showSpecJSON(content.text, \"content-text-spec\");\n    showValue(text, content.text.value, \"content-text\");\n\n    showFieldTitle(content.textList.title, \"content-text-list-title\");\n    showSpecJSON(content.textList, \"content-text-list-spec\");\n    showListValue(text, content.textList.value, \"content-text-list\");\n\n    showFieldTitle(content.video.title, \"content-video-title\");\n    showSpecJSON(content.video, \"content-video-spec\");\n    showValue(video, content.video.value, \"content-video\", true);\n\n    showFieldTitle(content.videoList.title, \"content-video-list-title\");\n    showSpecJSON(content.videoList, \"content-video-list-spec\");\n    showListValue(video, content.videoList.value, \"content-video-list\", true);\n\n    showFieldTitle(content.number.title, \"content-number-title\");\n    showSpecJSON(content.number, \"content-number-spec\");\n    showValue(text, content.number.value, \"content-number\");\n\n    showFieldTitle(content.numberList.title, \"content-number-list-title\");\n    showSpecJSON(content.numberList, \"content-number-list-spec\");\n    showListValue(text, content.numberList.value, \"content-number-list\");\n\n    setupClickableLinks();\n\n    drawPlateSpotLocations();\n\n    sdkInstance.notifyAppIsReady();\n}\n\nfunction image(path: string) {\n    let img = new Image();\n    img.src = path;\n    return img;\n}\n\nfunction video(path: string) {\n    let video = document.createElement(\"video\");\n    video.src = path;\n    video.controls = true;\n    return video;\n}\n\nfunction text(text: any, className = \"text-content\") {\n    let span = document.createElement(\"span\");\n    span.textContent = text;\n    span.className = className;\n    return span;\n}\n\nfunction showValue<T>(template: (content: T) => HTMLElement, content: T, containerId: string, copyValueToLabel = false) {\n    document.getElementById(containerId).appendChild(text(\"Content from default-content.json:\"));\n    if (copyValueToLabel) {\n        document.getElementById(containerId).appendChild(text(String(content), \"label\"));\n    }\n    document.getElementById(containerId).appendChild(template(content));\n}\n\nfunction showListValue<T>(template: (content: T) => HTMLElement, content: T[], containerId: string, copyValueToLabel = false) {\n    document.getElementById(containerId).appendChild(text(\"Content from default-content.json:\"));\n    let container = document.getElementById(containerId);\n    content.forEach(v => {\n        if (copyValueToLabel) {\n            container.appendChild(text(String(v), \"label\"));\n        }\n        container.appendChild(template(v));\n    });\n}\n\nfunction showFieldTitle(title: string, containerId: string) {\n    document.getElementById(containerId).appendChild(text(title));\n}\n\nfunction showSpecJSON(content: any, containerId: string) {\n    showFieldTitle(\"Field spec in content-schema.json:\", containerId);\n    document.getElementById(containerId).appendChild(text(JSON.stringify((Object as any).assign({}, content, { value: undefined }), null, \"    \")));\n}\n\nfunction drawPlateSpotLocations() {\n    let layout = sdkInstance.getLayout();\n    let canvas = document.getElementById(\"plate-spot-canvas\") as HTMLCanvasElement;\n    canvas.width = layout.widthPx;\n    canvas.height = layout.heightPx;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.fillStyle = \"#F9B\";\n    for (let plate of layout.plateSpots) {\n        ctx.beginPath();\n        ctx.ellipse(plate.x, plate.y, plate.radius, plate.radius, 0, 0, 2 * Math.PI);\n        ctx.fill();\n    }\n    ctx.fillStyle = \"#9BF\";\n    for (let area of layout.contentAreas) {\n        ctx.save();\n        ctx.translate(area.x, area.y);\n        ctx.rotate(area.rotationDegrees / 180 * Math.PI);\n        ctx.fillRect(-area.width / 2, -area.height / 2, area.width, area.height);\n        ctx.restore();\n    }\n}\n\nfunction setupClickableLinks() {\n    document.getElementById(\"plate-spot-link\").addEventListener(\"touchstart\", e => {\n        document.location.href = (e.currentTarget as HTMLAnchorElement).href;\n    });\n    document.getElementById(\"request-app-close-button\").addEventListener(\"touchstart\", e => {\n        sdkInstance.requestAppClose();\n    });\n}","/**\n * This is a metadata generation module. It exports one default function that returns an object\n * that tells the apphost how to display your app.\n * \n * It is compiled by the `ordamo-v3-sdk generate` command line utility, which JSON encodes\n * the result of this function and saves it to metadata.json. This happens in a NodeJS process,\n * so it's fine to use Node-only functionality.\n */\n\ndeclare function require(path: string): any;\n\nimport * as sdk from \"ordamo-v3-sdk\";\n\nexport default function getMetadata(): sdk.AppMetadata {\n  return {\n    // use of sdk.AUTO_METADATA causes the value to be filled in from the package.json fields\n    // of the same name when this file is compiled by the ordamo-v3-sdk command line utility \n    id: sdk.AUTO_METADATA,\n    version: sdk.AUTO_METADATA,\n    description: sdk.AUTO_METADATA,\n\n    defaultIconSrc: \"menu-icons/default-app-icon.png\",\n    menuNodes: [\n      {\n        iconSrc: \"menu-icons/button-1.png\",\n        navigateButtonId: \"button-1\"\n      },\n      {\n        iconSrc: \"menu-icons/parent.png\",\n        children: [\n          {\n            iconSrc: \"menu-icons/button-2.png\",\n            navigateButtonId: \"button-2\"\n          },\n          {\n            iconSrc: \"menu-icons/button-3.png\",\n            navigateButtonId: \"button-3\"\n          }\n        ]\n      },\n      {\n        iconSrc: \"menu-icons/close.png\",\n        closeMenu: true\n      }\n    ]\n  };\n}\n","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}